---
import { sortForMasonryLayout } from '@/functions';
import { Image } from 'astro:assets';

interface Props {
  images: {
    url: string;
    alt: string;
  }[];
}

const { images } = Astro.props;
---

<section class="relative z-10 w-full overflow-visible">
  <div class="relative overflow-x-visible">
    <div
      class="max-w-none
        w-full md:w-[130%]
        -translate-x-0 md:-translate-x-[10%]
        mx-auto
        columns-1 sm:columns-2 lg:columns-3
        gap-2 space-y-2"
      id="gallery"
    >
      {sortForMasonryLayout(images, 1).map((img, i) => (
        <div
          id={`overlay-${i}`}
          class="break-inside-avoid relative group cursor-pointer"
        >
          <Image
            src={img.url}
            alt={img.alt}
            width={1}
            height={1}
            inferSize
            loading="lazy"
            class="w-full h-auto rounded-md"
          />
          <div
            class="
              absolute bottom-0 left-0 right-0 px-3 py-2 text-xs
              text-white bg-black/60 rounded-b-md
              pointer-events-none
            "
          >
            {img.alt}
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<div
  id="overlay"
  class="fixed inset-0 z-10 flex items-center justify-center bg-black/0 p-4 opacity-0 pointer-events-none transition-opacity duration-300 data-[visible=true]:bg-black/60 data-[visible=true]:opacity-100 data-[visible=true]:pointer-events-auto"
  data-visible="false"
>
  <div
    class="relative shadow-black shadow-2xl opacity-0 scale-95 transition-all duration-300 ease-out data-[visible=true]:opacity-100 data-[visible=true]:scale-100"
    data-zoom-target
  >
    <Image
      src={images[0].url}
      alt={images[0].alt}
      width={1}
      height={1}
      inferSize
      loading="lazy"
      class="relative w-full h-auto max-w-full max-h-full sm:max-w-[70vw] sm:max-h-[70vh] rounded-md shadow-lg"
    />
    <div
      class="absolute bottom-0 left-0 right-0 px-3 py-2 text-sm sm:text-md text-white bg-black/60 rounded-b-md pointer-events-none z-20"
    >
      ""
    </div>
  </div>
</div>

<script>
const imageElements = document.querySelectorAll('[id^="overlay-"]');
const overlay = document.getElementById('overlay') as HTMLElement;
const zoomTarget = overlay.querySelector('[data-zoom-target]') as HTMLElement;

imageElements.forEach((img) => {
  img.addEventListener('click', () => {
    if (!overlay || !zoomTarget) return;

    const image = img.children[0] as HTMLImageElement;
    const alt = img.children[1];

    const overlayImage = zoomTarget.children[0] as HTMLImageElement;
    const overlayAlt = zoomTarget.children[1] as HTMLDivElement;

    overlayImage.src = image.src;
    overlayImage.alt = alt.textContent || '';
    overlayAlt.textContent = alt.textContent || '';

    overlay.dataset.visible = 'true';
    zoomTarget.dataset.visible = 'true'; // needed to trigger zoom
  });
});

overlay?.addEventListener('click', () => {
  overlay.dataset.visible = 'false';
  zoomTarget?.removeAttribute('data-visible');
});

document.addEventListener('keydown', (e) => {
  if (e.key === 'Escape') {
    overlay.dataset.visible = 'false';
    zoomTarget?.removeAttribute('data-visible');
  }
});
</script>